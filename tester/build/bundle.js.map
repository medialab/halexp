{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://Results comparator for HalExp project/./index.js"],"sourcesContent":["/* TODO:\n * - reenable hits option when prod upgraded\n * - allow to see the actual full data of a single result\n * - allow sorting of results\n*/\n\nlet configs;\nlet nb_results;\nlet queries_awaited = 0;\n\nconst headers = document.getElementById(\"headers\");\nconst results = document.getElementById(\"results\");\nconst loader = document.getElementById(\"loader\");\n\nconst trim = (text) => text.trim();\n\nconst readInputs = () => {\n  configs = [];\n\n  const instances = document.getElementById(\"instances\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((url) => url.replace(/^(https?:\\/\\/)?/, \"//\").replace(/\\/?$/, \"/\"));\n\n  const min_years = document.getElementById(\"min_year\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((year) => parseInt(year));\n\n  const thresholds = document.getElementById(\"thresholds\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((val) => parseFloat(val));\n\n  const metrics = [];\n  document.querySelectorAll('#metrics input[type=\"checkbox\"]').forEach(\n    (metric) => {\n      if (metric.checked)\n        metrics.push(metric.value);\n    });\n\n  instances.forEach((i) =>\n    min_years.forEach((y) =>\n      thresholds.forEach((t) =>\n        metrics.forEach((m) =>\n          configs.push(\n            {\n              name: [i.replace(/^.*\\/([^\\/]+)\\/$/, \"$1\"), y, t, m].join(\" | \"),\n              instance: i,\n              min_year: y,\n              threshold: t,\n              metric: m\n            }\n          )\n        )\n      )\n    )\n  );\n\n  nb_results = parseInt(document.getElementById(\"nb_results\").value);\n\n  console.log(configs, nb_results);\n}\n\nconst prepareTable = () => {\n  readInputs();\n\n  let cols = [\"Config\"];\n  for (let i = 0; i < nb_results; i++) {\n    cols.push(\"#&nbsp;\" + (i + 1))\n  };\n  headers.innerHTML = cols.map((c) => \"<th>\" + c + \"</th>\").join(\"\");\n\n  let rows = [];\n  for (let i = 0; i < configs.length; i++) {\n    let row = [];\n    row.push(configs[i].name);\n    for (let j = 0; j < nb_results; j++) {\n      row.push(\"\");\n    };\n    rows.push(row.map((c) => \"<td>\" + c + \"</td>\").join(\"\"));\n  };\n  values.innerHTML = rows.map((r, i) => '<tr id=\"config-' + i + '\">' + r + '</tr>').join(\"\")\n}\n\nconst runQueries = () => {\n  prepareTable();\n  queries_awaited = configs.length;\n  loader.style.display = \"block\";\n\n  const query_type = document.querySelector('input[name=\"query_type\"]:checked').value;\n  const query = document.getElementById(\"query\").value;\n  configs.forEach((config, i) => {\n    //const route = config.instance + query_type + \"/query?query=\" + query + \"&hits=\" + nb_results + \"&score_threshold=\" + config.threshold + \"&min_year=\" + config.min_year + \"&rank_metric=\" + config.metric;\n    const route = config.instance + query_type + \"/query?query=\" + query + \"&score_threshold=\" + config.threshold + \"&min_year=\" + config.min_year + \"&rank_metric=\" + config.metric;\n    console.log(\"Call #\" + i + \": \" + route)\n    fetch(route)\n      .then(resp => resp.json())\n      .then((data) => {\n        console.log(\"Result #\" + i + \": \", data)\n        data.reponses.forEach((elt, n) => {\n          let uri, text;\n          if (elt.name) {\n            text = elt.name;\n            uri = \"https://sciencespo.hal.science/search/index/?q=%2A&rows=30&sort=producedDate_tdate+desc&authIdPerson_i=\" + elt[\"id-hal\"];\n          } else {\n            text = elt.title_s;\n            uri = elt.uri_s;\n          }\n          document.querySelector(\"#config-\" + i + \" td:nth-child(\" + (n + 2) + \")\").innerHTML = '<a href=\"' + uri + '\" target=\"_blank\">' + text + '</a>';\n        });\n        queries_awaited -= 1;\n      })\n  });\n}\n\ndocument.getElementById('submit').addEventListener('click', runQueries);\n\nprepareTable();\n\nsetInterval(() => {\n  if (!queries_awaited)\n    loader.style.display = \"none\";\n}, 100);\n"],"names":["configs","nb_results","queries_awaited","headers","document","getElementById","loader","trim","text","prepareTable","instances","value","split","map","filter","x","url","replace","min_years","year","parseInt","thresholds","val","parseFloat","metrics","querySelectorAll","forEach","metric","checked","push","i","y","t","m","name","join","instance","min_year","threshold","console","log","readInputs","cols","innerHTML","c","rows","length","row","j","values","r","addEventListener","style","display","query_type","querySelector","query","config","route","fetch","then","resp","json","data","reponses","elt","n","uri","title_s","uri_s","setInterval"],"sourceRoot":""}