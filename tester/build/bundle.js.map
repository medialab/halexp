{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://Results comparator for HalExp project/./index.js"],"sourcesContent":["/* TODO:\n * - allow sorting of results\n*/\n\nlet configs, query_type, query, nb_results;\nlet details = {};\nlet queries_awaited = 0;\n\nconst headers = document.getElementById(\"headers\");\nconst results = document.getElementById(\"results\");\nconst loader = document.getElementById(\"loader\");\nconst tooltip = document.getElementById(\"tooltip\");\n\nconst trim = (text) => text.trim();\n\nconst readInputs = () => {\n  configs = [];\n\n  const instances = document.getElementById(\"instances\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((url) => url.replace(/^(https?:\\/\\/)?/, \"//\").replace(/\\/?$/, \"/\"));\n\n  const min_years = document.getElementById(\"min_year\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((year) => parseInt(year));\n\n  const thresholds = document.getElementById(\"thresholds\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((val) => parseFloat(val));\n\n  const metrics = [];\n  document.querySelectorAll('#metrics input[type=\"checkbox\"]').forEach(\n    (metric) => {\n      if (metric.checked)\n        metrics.push(metric.value);\n    });\n\n  instances.forEach((i) =>\n    min_years.forEach((y) =>\n      thresholds.forEach((t) =>\n        metrics.forEach((m) =>\n          configs.push(\n            {\n              name: [i.replace(/^.*\\/([^\\/]+)\\/$/, \"$1\"), y, t, m].join(\" | \"),\n              instance: i,\n              min_year: y,\n              threshold: t,\n              metric: m\n            }\n          )\n        )\n      )\n    )\n  );\n\n  query_type = document.querySelector('input[name=\"query_type\"]:checked').value;\n  query = document.getElementById(\"query\").value;\n  nb_results = parseInt(document.getElementById(\"nb_results\").value);\n\n  console.log(configs, nb_results);\n}\n\nconst forgeQueryUrl = (conf) => conf.instance + query_type + \"/query?query=\" + query + \"&hits=\" + nb_results + \"&score_threshold=\" + conf.threshold + \"&min_year=\" + conf.min_year + \"&rank_metric=\" + conf.metric;\n\nconst prepareTable = () => {\n  readInputs();\n\n  let cols = [\"Config\"];\n  for (let i = 0; i < nb_results; i++) {\n    cols.push(\"#&nbsp;\" + (i + 1))\n  };\n  headers.innerHTML = cols.map((c) => \"<th>\" + c + \"</th>\").join(\"\");\n\n  let rows = [];\n  for (let i = 0; i < configs.length; i++) {\n    let row = [];\n    row.push('<a class=\"query_link\" href=' + forgeQueryUrl(configs[i])+ ' target=\"_blank\">ðŸ”—</a> ' + configs[i].name);\n    for (let j = 0; j < nb_results; j++) {\n      row.push(\"\");\n    };\n    rows.push(row.map((c) => \"<td>\" + c + \"</td>\").join(\"\"));\n  };\n  values.innerHTML = rows.map((r, i) => '<tr id=\"config-' + i + '\">' + r + '</tr>').join(\"\")\n}\n\nconst runQueries = () => {\n  prepareTable();\n  queries_awaited = configs.length;\n  loader.style.display = \"block\";\n\n  configs.forEach((config, i) => {\n    const route = forgeQueryUrl(config);\n    console.log(\"Call #\" + i + \": \" + route)\n    fetch(route)\n      .then(resp => resp.json())\n      .then((data) => {\n        console.log(\"Result #\" + i + \": \", data)\n        data.reponses.forEach((elt, n) => {\n          let uri, text;\n          if (elt.name) {\n            text = elt.name;\n            uri = \"https://sciencespo.hal.science/search/index/?q=%2A&rows=30&sort=producedDate_tdate+desc&authIdPerson_i=\" + elt[\"id-hal\"];\n          } else {\n            text = elt.title_s;\n            uri = elt.uri_s;\n          }\n          details[i + '#' + n] = elt;\n          document.querySelector(\"#config-\" + i + \" td:nth-child(\" + (n + 2) + \")\").innerHTML = '<a href=\"' + uri + '\" target=\"_blank\">' + text + '</a>&nbsp;&nbsp;<span id=\"' + i + '#' + n + '\" class=\"details\">ï¼‹</span>';\n        });\n        document.querySelectorAll(\"#config-\" + i + \" span\").forEach((el) => {\n          el.addEventListener('mouseenter', () => showTooltip(el.id));\n          el.addEventListener('mouseleave', () => clearTooltip());\n        });\n        queries_awaited -= 1;\n      })\n  });\n}\n\nconst showTooltip = (elid) => {\n  const dat = details[elid];\n  if (query_type === \"authors\")\n    tooltip.innerHTML = \"<p><b>Score:</b> \" + dat[\"aggregation score\"] + \"</p>\" +\n      \"<p><b>Labo:</b> \" + dat.lab_id + \"</p>\" +\n      \"<p><b>Matches (\" + dat.phrases.length + \"):</b> <ul><li>\" + [...new Set(dat.phrases)].join(\"</li><li>\") + \"</li></ul></p>\" +\n      \"<p><b>Papers (\" + dat.papers.length + \"):</b> <ul><li>\" + [...new Set(dat.papers.map((p) => p.title_s[0]))].join(\"</li><li>\") + \"</li></ul></p>\";\n  else tooltip.innerHTML = \"<p>\" + dat.citationFull_s + \"</p>\" +\n    \"<p><b>Subtitle:</b> \" + dat.subtitle_s[0] + \"</p>\" +\n    \"<p><b>Abstract:</b> \" + dat.abstract_s[0] + \"</p>\" +\n    \"<p><b>Keywords:</b> <ul><li>\" + dat.keyword_s.join(\"</li><li>\") + \"</li></ul></p>\" +\n    \"<p><b>Year:</b> \" + dat.publicationDate_s + \"</p>\";\n  tooltip.style.display = \"block\";\n  console.log(details[elid]);\n}\nconst clearTooltip = () => {\n  tooltip.innerHTML = \"\";\n  tooltip.style.display = \"none\";\n}\n\ndocument.getElementById('query_authors').addEventListener('change', prepareTable);\ndocument.getElementById('query_docs').addEventListener('change', prepareTable);\n\ndocument.getElementById('instances').addEventListener('keyup', prepareTable);\ndocument.getElementById('min_year').addEventListener('keyup', prepareTable);\ndocument.getElementById('thresholds').addEventListener('keyup', prepareTable);\n\ndocument.getElementById('metric_mean').addEventListener('change', prepareTable);\ndocument.getElementById('metric_median').addEventListener('change', prepareTable);\ndocument.getElementById('metric_log-mean').addEventListener('change', prepareTable);\n\ndocument.getElementById('query').addEventListener('keyup', prepareTable);\ndocument.getElementById('query').addEventListener('change', runQueries);\ndocument.getElementById('nb_results').addEventListener('change', prepareTable);\ndocument.getElementById('submit').addEventListener('click', runQueries);\n\nprepareTable();\n\nsetInterval(() => {\n  if (!queries_awaited)\n    loader.style.display = \"none\";\n}, 100);\n"],"names":["configs","query_type","query","nb_results","details","queries_awaited","headers","document","getElementById","loader","tooltip","trim","text","forgeQueryUrl","conf","instance","threshold","min_year","metric","prepareTable","instances","value","split","map","filter","x","url","replace","min_years","year","parseInt","thresholds","val","parseFloat","metrics","querySelectorAll","forEach","checked","push","i","y","t","m","name","join","querySelector","console","log","readInputs","cols","innerHTML","c","rows","length","row","j","values","r","runQueries","style","display","config","route","fetch","then","resp","json","data","reponses","elt","n","uri","title_s","uri_s","el","addEventListener","showTooltip","id","clearTooltip","elid","dat","lab_id","phrases","_toConsumableArray","Set","papers","p","citationFull_s","subtitle_s","abstract_s","keyword_s","publicationDate_s","setInterval"],"sourceRoot":""}