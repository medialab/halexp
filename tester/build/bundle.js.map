{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://Results comparator for HalExp project/./index.js"],"sourcesContent":["//import FileSaver from \"file-saver\";\n\nlet configs;\nlet nb_results;\nlet queries_awaited = 0;\n\nconst headers = document.getElementById(\"headers\");\nconst results = document.getElementById(\"results\");\nconst loader = document.getElementById(\"loader\");\n\nconst trim = (text) => text.trim();\n\nconst readInputs = () => {\n  configs = [];\n\n  const instances = document.getElementById(\"instances\").value\n    .split('\\n').map(trim)\n    .map((url) => url.replace(/^(https?:\\/\\/)?/, \"//\").replace(/\\/?$/, \"/\"));\n\n  const min_years = document.getElementById(\"min_year\").value\n    .split('\\n').map(trim)\n    .map((year) => parseInt(year));\n\n  const thresholds = document.getElementById(\"thresholds\").value\n    .split('\\n').map(trim)\n    .map((val) => parseFloat(val));\n\n  const metrics = [];\n  document.querySelectorAll('#metrics input[type=\"checkbox\"]').forEach(\n    (metric) => {\n      if (metric.checked)\n        metrics.push(metric.value);\n    });\n\n  instances.forEach((i) =>\n    min_years.forEach((y) =>\n      thresholds.forEach((t) =>\n        metrics.forEach((m) =>\n          configs.push(\n            {\n              name: [i.replace(/^.*\\/([^\\/]+)\\/$/, \"$1\"), y, t, m].join(\" | \"),\n              instance: i,\n              min_year: y,\n              threshold: t,\n              metric: m\n            }\n          )\n        )\n      )\n    )\n  );\n\n  nb_results = parseInt(document.getElementById(\"nb_results\").value);\n\n  console.log(configs, nb_results);\n}\n\nconst prepareTable = () => {\n  readInputs();\n\n  let cols = [\"Config\"];\n  for (let i = 0; i < nb_results; i++) {\n    cols.push(\"#&nbsp;\" + (i + 1))\n  };\n  headers.innerHTML = cols.map((c) => \"<th>\" + c + \"</th>\").join(\"\");\n\n  let rows = [];\n  for (let i = 0; i < configs.length; i++) {\n    let row = [];\n    row.push(configs[i].name);\n    for (let j = 0; j < nb_results; j++) {\n      row.push(\"\");\n    };\n    rows.push(row.map((c) => \"<td>\" + c + \"</td>\").join(\"\"));\n  };\n  values.innerHTML = rows.map((r, i) => '<tr id=\"config-' + i + '\">' + r + '</tr>').join(\"\")\n}\n\nconst runQueries = () => {\n  prepareTable();\n  queries_awaited = configs.length;\n  loader.style.display = \"block\";\n\n  const query = document.getElementById(\"query\").value;\n  configs.forEach((config, i) => {\n    //const route = config.instance + \"authors/query?query=\" + query + \"&hits=\" + nb_results + \"&score_threshold=\" + config.threshold + \"&min_year=\" + config.min_year + \"&rank_metric=\" + config.metric;\n    const route = config.instance + \"authors/query?query=\" + query + \"&score_threshold=\" + config.threshold + \"&min_year=\" + config.min_year + \"&rank_metric=\" + config.metric;\n    console.log(\"Call #\" + i + \": \" + route)\n    fetch(route)\n      .then(resp => resp.json())\n      .then((data) => {\n        console.log(\"Result #\" + i + \": \", data)\n        data.reponses.forEach((elt, n) => {\n          document.querySelector(\"#config-\" + i + \" td:nth-child(\" + (n + 2) + \")\").innerHTML = elt.name;\n        });\n        queries_awaited -= 1;\n      })\n  });\n}\n\ndocument.getElementById('submit').addEventListener('click', runQueries);\n\nprepareTable();\n\nsetInterval(() => {\n  if (!queries_awaited)\n    loader.style.display = \"none\";\n}, 100);\n"],"names":["configs","nb_results","queries_awaited","headers","document","getElementById","loader","trim","text","prepareTable","instances","value","split","map","url","replace","min_years","year","parseInt","thresholds","val","parseFloat","metrics","querySelectorAll","forEach","metric","checked","push","i","y","t","m","name","join","instance","min_year","threshold","console","log","readInputs","cols","innerHTML","c","rows","length","row","j","values","r","addEventListener","style","display","query","config","route","fetch","then","resp","json","data","reponses","elt","n","querySelector","setInterval"],"sourceRoot":""}