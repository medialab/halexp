{"version":3,"file":"bundle.js","mappings":"mBAKA,IAAIA,EAASC,EAAYC,EAAOC,EAC5BC,EAAU,CAAC,EACXC,EAAkB,EAEhBC,EAAUC,SAASC,eAAe,WAElCC,GADUF,SAASC,eAAe,WACzBD,SAASC,eAAe,WAEjCE,EAAO,SAACC,GAAI,OAAKA,EAAKD,MAAM,EAiD5BE,EAAgB,SAACC,GAAI,OAAKA,EAAKC,SAAWb,EAAa,gBAAkBC,EAAQ,SAAWC,EAAa,oBAAsBU,EAAKE,UAAY,aAAeF,EAAKG,SAAW,gBAAkBH,EAAKI,MAAM,EAE5MC,EAAe,YAjDF,WACjBlB,EAAU,GAEV,IAAMmB,EAAYZ,SAASC,eAAe,aAAaY,MACpDC,MAAM,MAAMC,IAAIZ,GAAMa,QAAO,SAACC,GAAC,OAAKA,CAAC,IACrCF,KAAI,SAACG,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,MAAMA,QAAQ,OAAQ,IAAI,IAEnEC,EAAYpB,SAASC,eAAe,YAAYY,MACnDC,MAAM,MAAMC,IAAIZ,GAAMa,QAAO,SAACC,GAAC,OAAKA,CAAC,IACrCF,KAAI,SAACM,GAAI,OAAKC,SAASD,EAAK,IAEzBE,EAAavB,SAASC,eAAe,cAAcY,MACtDC,MAAM,MAAMC,IAAIZ,GAAMa,QAAO,SAACC,GAAC,OAAKA,CAAC,IACrCF,KAAI,SAACS,GAAG,OAAKC,WAAWD,EAAI,IAEzBE,EAAU,GAChB1B,SAAS2B,iBAAiB,mCAAmCC,SAC3D,SAAClB,GACKA,EAAOmB,SACTH,EAAQI,KAAKpB,EAAOG,MACxB,IAEFD,EAAUgB,SAAQ,SAACG,GAAC,OAClBX,EAAUQ,SAAQ,SAACI,GAAC,OAClBT,EAAWK,SAAQ,SAACK,GAAC,OACnBP,EAAQE,SAAQ,SAACM,GAAC,OAChBzC,EAAQqC,KACN,CACEK,KAAM,CAACJ,EAAEZ,QAAQ,mBAAoB,MAAOa,EAAGC,EAAGC,GAAGE,KAAK,OAC1D7B,SAAUwB,EACVtB,SAAUuB,EACVxB,UAAWyB,EACXvB,OAAQwB,GAEX,GACF,GACF,GACF,IAGHxC,EAAaM,SAASqC,cAAc,oCAAoCxB,MACxElB,EAAQK,SAASC,eAAe,SAASY,MACzCjB,EAAa0B,SAAStB,SAASC,eAAe,cAAcY,OAE5DyB,QAAQC,IAAI9C,EAASG,EACvB,CAKE4C,GAGA,IADA,IAAIC,EAAO,CAAC,UACHV,EAAI,EAAGA,EAAInC,EAAYmC,IAC9BU,EAAKX,KAAK,WAAaC,EAAI,IAE7BhC,EAAQ2C,UAAYD,EAAK1B,KAAI,SAAC4B,GAAC,MAAK,OAASA,EAAI,OAAO,IAAEP,KAAK,IAG/D,IADA,IAAIQ,EAAO,GACFb,EAAI,EAAGA,EAAItC,EAAQoD,OAAQd,IAAK,CACvC,IAAIe,EAAM,GACVA,EAAIhB,KAAK,8BAAgCzB,EAAcZ,EAAQsC,IAAK,2BAA6BtC,EAAQsC,GAAGI,MAC5G,IAAK,IAAIY,EAAI,EAAGA,EAAInD,EAAYmD,IAC9BD,EAAIhB,KAAK,IAEXc,EAAKd,KAAKgB,EAAI/B,KAAI,SAAC4B,GAAC,MAAK,OAASA,EAAI,OAAO,IAAEP,KAAK,IACtD,CACAY,OAAON,UAAYE,EAAK7B,KAAI,SAACkC,EAAGlB,GAAC,MAAK,kBAAoBA,EAAI,KAAOkB,EAAI,OAAO,IAAEb,KAAK,GACzF,EAEMc,EAAa,WACjBvC,IACAb,EAAkBL,EAAQoD,OAC1B3C,EAAOiD,MAAMC,QAAU,QAEvB3D,EAAQmC,SAAQ,SAACyB,EAAQtB,GACvB,IAAMuB,EAAQjD,EAAcgD,GAC5Bf,QAAQC,IAAI,SAAWR,EAAI,KAAOuB,GAClCC,MAAMD,GACHE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IACxBF,MAAK,SAACG,GACLrB,QAAQC,IAAI,WAAaR,EAAI,KAAM4B,GACnCA,EAAKC,SAAShC,SAAQ,SAACiC,EAAKC,GAC1B,IAAIC,EAAK3D,EACLyD,EAAI1B,MACN/B,EAAOyD,EAAI1B,KACX4B,EAAM,0GAA4GF,EAAI,YAEtHzD,EAAOyD,EAAIG,QACXD,EAAMF,EAAII,OAEZpE,EAAQkC,EAAI,IAAM+B,GAAKD,EACvB7D,SAASqC,cAAc,WAAaN,EAAI,kBAAoB+B,EAAI,GAAK,KAAKpB,UAAY,YAAcqB,EAAM,qBAAuB3D,EAAO,6BAA+B2B,EAAI,IAAM+B,EAAI,4BACvL,IACA9D,SAAS2B,iBAAiB,WAAaI,EAAI,SAASH,SAClD,SAACsC,GAAE,OAAKA,EAAGC,iBAAiB,aAAa,kBAAMC,EAAYF,EAAGG,GAAG,GAAC,IAEpEvE,GAAmB,CACrB,GACJ,GACF,EAEMsE,EAAc,SAACE,GACnBhC,QAAQC,IAAI1C,EAAQyE,GACtB,EAEAtE,SAASC,eAAe,iBAAiBkE,iBAAiB,SAAUxD,GACpEX,SAASC,eAAe,cAAckE,iBAAiB,SAAUxD,GAEjEX,SAASC,eAAe,aAAakE,iBAAiB,QAASxD,GAC/DX,SAASC,eAAe,YAAYkE,iBAAiB,QAASxD,GAC9DX,SAASC,eAAe,cAAckE,iBAAiB,QAASxD,GAEhEX,SAASC,eAAe,eAAekE,iBAAiB,SAAUxD,GAClEX,SAASC,eAAe,iBAAiBkE,iBAAiB,SAAUxD,GACpEX,SAASC,eAAe,mBAAmBkE,iBAAiB,SAAUxD,GAEtEX,SAASC,eAAe,SAASkE,iBAAiB,QAASxD,GAC3DX,SAASC,eAAe,SAASkE,iBAAiB,SAAUjB,GAC5DlD,SAASC,eAAe,cAAckE,iBAAiB,SAAUxD,GACjEX,SAASC,eAAe,UAAUkE,iBAAiB,QAASjB,GAE5DvC,IAEA4D,aAAY,WACLzE,IACHI,EAAOiD,MAAMC,QAAU,OAC3B,GAAG,I","sources":["webpack://Results comparator for HalExp project/./index.js"],"sourcesContent":["/* TODO:\n * - allow to see the actual full data of a single result as tooltip\n * - allow sorting of results\n*/\n\nlet configs, query_type, query, nb_results;\nlet details = {};\nlet queries_awaited = 0;\n\nconst headers = document.getElementById(\"headers\");\nconst results = document.getElementById(\"results\");\nconst loader = document.getElementById(\"loader\");\n\nconst trim = (text) => text.trim();\n\nconst readInputs = () => {\n  configs = [];\n\n  const instances = document.getElementById(\"instances\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((url) => url.replace(/^(https?:\\/\\/)?/, \"//\").replace(/\\/?$/, \"/\"));\n\n  const min_years = document.getElementById(\"min_year\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((year) => parseInt(year));\n\n  const thresholds = document.getElementById(\"thresholds\").value\n    .split('\\n').map(trim).filter((x) => x)\n    .map((val) => parseFloat(val));\n\n  const metrics = [];\n  document.querySelectorAll('#metrics input[type=\"checkbox\"]').forEach(\n    (metric) => {\n      if (metric.checked)\n        metrics.push(metric.value);\n    });\n\n  instances.forEach((i) =>\n    min_years.forEach((y) =>\n      thresholds.forEach((t) =>\n        metrics.forEach((m) =>\n          configs.push(\n            {\n              name: [i.replace(/^.*\\/([^\\/]+)\\/$/, \"$1\"), y, t, m].join(\" | \"),\n              instance: i,\n              min_year: y,\n              threshold: t,\n              metric: m\n            }\n          )\n        )\n      )\n    )\n  );\n\n  query_type = document.querySelector('input[name=\"query_type\"]:checked').value;\n  query = document.getElementById(\"query\").value;\n  nb_results = parseInt(document.getElementById(\"nb_results\").value);\n\n  console.log(configs, nb_results);\n}\n\nconst forgeQueryUrl = (conf) => conf.instance + query_type + \"/query?query=\" + query + \"&hits=\" + nb_results + \"&score_threshold=\" + conf.threshold + \"&min_year=\" + conf.min_year + \"&rank_metric=\" + conf.metric;\n\nconst prepareTable = () => {\n  readInputs();\n\n  let cols = [\"Config\"];\n  for (let i = 0; i < nb_results; i++) {\n    cols.push(\"#&nbsp;\" + (i + 1))\n  };\n  headers.innerHTML = cols.map((c) => \"<th>\" + c + \"</th>\").join(\"\");\n\n  let rows = [];\n  for (let i = 0; i < configs.length; i++) {\n    let row = [];\n    row.push('<a class=\"query_link\" href=' + forgeQueryUrl(configs[i])+ ' target=\"_blank\">ðŸ”—</a> ' + configs[i].name);\n    for (let j = 0; j < nb_results; j++) {\n      row.push(\"\");\n    };\n    rows.push(row.map((c) => \"<td>\" + c + \"</td>\").join(\"\"));\n  };\n  values.innerHTML = rows.map((r, i) => '<tr id=\"config-' + i + '\">' + r + '</tr>').join(\"\")\n}\n\nconst runQueries = () => {\n  prepareTable();\n  queries_awaited = configs.length;\n  loader.style.display = \"block\";\n\n  configs.forEach((config, i) => {\n    const route = forgeQueryUrl(config);\n    console.log(\"Call #\" + i + \": \" + route)\n    fetch(route)\n      .then(resp => resp.json())\n      .then((data) => {\n        console.log(\"Result #\" + i + \": \", data)\n        data.reponses.forEach((elt, n) => {\n          let uri, text;\n          if (elt.name) {\n            text = elt.name;\n            uri = \"https://sciencespo.hal.science/search/index/?q=%2A&rows=30&sort=producedDate_tdate+desc&authIdPerson_i=\" + elt[\"id-hal\"];\n          } else {\n            text = elt.title_s;\n            uri = elt.uri_s;\n          }\n          details[i + '#' + n] = elt;\n          document.querySelector(\"#config-\" + i + \" td:nth-child(\" + (n + 2) + \")\").innerHTML = '<a href=\"' + uri + '\" target=\"_blank\">' + text + '</a>&nbsp;&nbsp;<span id=\"' + i + '#' + n + '\" class=\"details\">ï¼‹</span>';\n        });\n        document.querySelectorAll(\"#config-\" + i + \" span\").forEach(\n          (el) => el.addEventListener('mouseover', () => showTooltip(el.id))\n        );\n        queries_awaited -= 1;\n      })\n  });\n}\n\nconst showTooltip = (elid) => {\n  console.log(details[elid]);\n}\n\ndocument.getElementById('query_authors').addEventListener('change', prepareTable);\ndocument.getElementById('query_docs').addEventListener('change', prepareTable);\n\ndocument.getElementById('instances').addEventListener('keyup', prepareTable);\ndocument.getElementById('min_year').addEventListener('keyup', prepareTable);\ndocument.getElementById('thresholds').addEventListener('keyup', prepareTable);\n\ndocument.getElementById('metric_mean').addEventListener('change', prepareTable);\ndocument.getElementById('metric_median').addEventListener('change', prepareTable);\ndocument.getElementById('metric_log-mean').addEventListener('change', prepareTable);\n\ndocument.getElementById('query').addEventListener('keyup', prepareTable);\ndocument.getElementById('query').addEventListener('change', runQueries);\ndocument.getElementById('nb_results').addEventListener('change', prepareTable);\ndocument.getElementById('submit').addEventListener('click', runQueries);\n\nprepareTable();\n\nsetInterval(() => {\n  if (!queries_awaited)\n    loader.style.display = \"none\";\n}, 100);\n"],"names":["configs","query_type","query","nb_results","details","queries_awaited","headers","document","getElementById","loader","trim","text","forgeQueryUrl","conf","instance","threshold","min_year","metric","prepareTable","instances","value","split","map","filter","x","url","replace","min_years","year","parseInt","thresholds","val","parseFloat","metrics","querySelectorAll","forEach","checked","push","i","y","t","m","name","join","querySelector","console","log","readInputs","cols","innerHTML","c","rows","length","row","j","values","r","runQueries","style","display","config","route","fetch","then","resp","json","data","reponses","elt","n","uri","title_s","uri_s","el","addEventListener","showTooltip","id","elid","setInterval"],"sourceRoot":""}